{"ast":null,"code":"var _jsxFileName = \"D:\\\\Important\\\\WebDevelopment\\\\Projects\\\\darklight\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport TopBar from \"./Components/TopBar\";\nimport React from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = React.useState(\"light\");\n  function SwitchStateHandler(event) {\n    setMode(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TopBar, {\n      mode: mode,\n      setMode: SwitchStateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"ckwlr2Ue1/16M01etSJDlsATeMQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TopBar","React","App","mode","setMode","useState","SwitchStateHandler","event","target","value"],"sources":["D:/Important/WebDevelopment/Projects/darklight/src/App.tsx"],"sourcesContent":["import TopBar from \"./Components/TopBar\";\nimport React from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\nfunction App() {\n  const [mode, setMode] = React.useState(\"light\");\n  function SwitchStateHandler(event:any) {\n    setMode(event.target.value);\n  }\n  return (\n    <>\n    <TopBar \n      mode = {mode}\n      setMode =  {SwitchStateHandler}\n    />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sDAAsD;AAAA;AAAA;AAC7D,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,KAAK,CAACI,QAAQ,CAAC,OAAO,CAAC;EAC/C,SAASC,kBAAkB,CAACC,KAAS,EAAE;IACrCH,OAAO,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B;EACA,oBACE;IAAA,uBACA,QAAC,MAAM;MACL,IAAI,EAAIN,IAAK;MACb,OAAO,EAAKG;IAAmB;MAAA;MAAA;MAAA;IAAA;EAC/B,iBACC;AAEP;AAAC,GAbQJ,GAAG;AAAA,KAAHA,GAAG;AAeZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}